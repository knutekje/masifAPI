// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using masifAPI.Data;

#nullable disable

namespace masifAPI.Migrations
{
    [DbContext(typeof(MasifContext))]
    [Migration("20240629222801_intialFood")]
    partial class intialFood
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("masifAPI.Model.FoodItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ExternalID")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ExternalID");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("Price");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Supplier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Unit");

                    b.HasKey("Id");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("masifAPI.Model.Incident", b =>
                {
                    b.Property<long>("ReportID")
                        .HasColumnType("bigint")
                        .HasColumnName("ReportID");

                    b.Property<long>("IdentityUser")
                        .HasColumnType("bigint")
                        .HasColumnName("IdentityUser");

                    b.Property<long>("FoodID")
                        .HasColumnType("bigint")
                        .HasColumnName("FoodID");

                    b.Property<decimal>("ItemPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("ItemPrice");

                    b.Property<decimal>("ValueIncident")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("ValueIncident");

                    b.HasKey("ReportID", "IdentityUser");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("masifAPI.Model.Picture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("FileName");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("FilePath");

                    b.HasKey("Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("masifAPI.Model.Report", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<long>("FoodID")
                        .HasColumnType("bigint")
                        .HasColumnName("FoodID");

                    b.Property<DateTime>("IncidentDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("IncidentDate");

                    b.Property<long>("PictureId")
                        .HasColumnType("bigint")
                        .HasColumnName("PictureId");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("Quantity");

                    b.Property<DateTime>("ReportedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ReportedDate");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
